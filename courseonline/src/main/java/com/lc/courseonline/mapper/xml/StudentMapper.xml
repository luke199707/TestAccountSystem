<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.courseonline.mapper.StudentMapper">

    <resultMap id="BaseResultMap" type="com.lc.courseonline.entity.Student" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="sno" property="sno" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="pwd" property="pwd" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="department" property="department" jdbcType="VARCHAR" />
        <result column="grade" property="grade" jdbcType="VARCHAR" />
        <result column="sclass" property="sclass" jdbcType="VARCHAR" />
        <result column="subject" property="subject" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <!--分页条件查询(offset关键字SQLServer2012以后版本才支持)-->
    <select id="selectStudentByConditionForPage" resultMap="BaseResultMap" parameterType="map">
        WITH selectTemp AS (SELECT TOP 100 PERCENT ROW_NUMBER() OVER (ORDER BY s.${sortField} ${order}) as __row_number__,
        s.id,s.sno,s.name,s.pwd,s.email,d.name as department,g.name as grade,sc.name as sclass,s.subject,s.create_time,s.update_time
        from student s
        join department d on s.department=d.id
        join grade g on s.grade=g.id
        join sclass sc on s.sclass=sc.id
        <where>
            <if test="sno!=null and sno!=''">
                s.sno like concat('%',#{sno},'%')
            </if>
            <if test="name!=null and name!=''">
                and s.name like concat('%',#{name},'%')
            </if>
        </where>
        ORDER BY s.${sortField} ${order})
        SELECT * FROM selectTemp WHERE __row_number__ BETWEEN (#{page}-1)*#{limit}+1 AND #{page}*#{limit} ORDER BY __row_number__
    </select>

    <!--条件统计-->
    <select id="selectCountOfStudentByCondition" parameterType="map" resultType="int">
        select count(*)
        from student s
        join department d on s.department=d.id
        join grade g on s.grade=g.id
        join sclass sc on s.sclass=sc.id
        <where>
            <if test="sno!=null and sno!=''">
                s.sno like concat('%',#{sno},'%')
            </if>
            <if test="name!=null and name!=''">
                and s.name like concat('%',#{name},'%')
            </if>
        </where>
    </select>
</mapper>
